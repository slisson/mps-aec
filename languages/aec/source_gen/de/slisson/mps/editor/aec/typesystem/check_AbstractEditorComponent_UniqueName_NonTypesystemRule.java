package de.slisson.mps.editor.aec.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.messageTargets.PropertyMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import jetbrains.mps.smodel.SModelUtil_new;

public class check_AbstractEditorComponent_UniqueName_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_AbstractEditorComponent_UniqueName_NonTypesystemRule() {
  }

  public void applyRule(final SNode node, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    boolean duplicate = (ListSequence.fromList(SNodeOperations.getDescendants(SNodeOperations.getAncestor(node, "jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration", false, false), "de.slisson.mps.editor.aec.structure.AbstractEditorComponent", false, new String[]{})).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it != node && eq_oaf257_a0a0a0a0a0a0a0a0a(SPropertyOperations.getString(it, "name"), SPropertyOperations.getString(node, "name"));
      }
    }) != null);
    if (duplicate) {
      {
        MessageTarget errorTarget = new NodeMessageTarget();
        errorTarget = new PropertyMessageTarget("name");
        IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, "Name not Unique", "r:b354898a-42c5-432a-8c8c-22bd778cb90d(de.slisson.mps.editor.aec.typesystem)", "6179564151247401131", null, errorTarget);
      }
    }
  }

  public String getApplicableConceptFQName() {
    return "de.slisson.mps.editor.aec.structure.AbstractEditorComponent";
  }

  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    {
      boolean b = SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
      return new IsApplicableStatus(b, null);
    }
  }

  public boolean overrides() {
    return false;
  }

  private static boolean eq_oaf257_a0a0a0a0a0a0a0a0a(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
